import academia.*

describe "Academia de Magia" {

	const pelota = new Cosa (volumen = 3, marca = cuchuflito, esMagica = false, esReliquia = false)
	const escoba = new Cosa (volumen = 4, marca = acme, esMagica = true, esReliquia = true)
	const varita = new Cosa (volumen = 1, marca = fenix, esMagica = true, esReliquia = false)
	const pava = new Cosa (volumen = 2, marca = acme, esMagica = false, esReliquia = true)
	const lamparaAladino = new Cosa (volumen = 3, marca = fenix, esMagica = true, esReliquia = true)
	const baul = new Baul (volumenMaximo = 5)
	const gabineteMagico = new GabineteMagico()
	const armario = new Armario(cantidadMaxima = 2)
	
	method initialize() {
		baul.guardar(escoba)
		gabineteMagico.guardar(varita)
		armario.cantidadMaxima(2)
		armario.guardar(pelota)
		academia.muebles(#{baul, gabineteMagico, armario})
	}

	test "1.1) Saber si está guardado algo" {
		assert.that(academia.tieneGuardada(varita))
		assert.that(academia.tieneGuardada(pelota))
		assert.that(academia.tieneGuardada(escoba))
		assert.notThat(academia.tieneGuardada(pava))
		assert.notThat(academia.tieneGuardada(lamparaAladino))
	}

	test "1.2) Saber en qué mueble está guardado algo" {
		assert.equals(gabineteMagico, academia.muebleQueContiene(varita))
		assert.equals(armario, academia.muebleQueContiene(pelota))
		assert.equals(baul, academia.muebleQueContiene(escoba))
	}

	test "1.3) Saber si se puede guardar algo" {
		assert.notThat(academia.puedeGuardar(varita))
		assert.notThat(academia.puedeGuardar(pelota))
		assert.notThat(academia.puedeGuardar(escoba))
		assert.that(academia.puedeGuardar(pava))
		assert.that(academia.puedeGuardar(lamparaAladino))
		armario.cantidadMaxima(1)
		assert.notThat(academia.puedeGuardar(pava))
	}
	
	test "1.4) Saber en que muebles se puede guardar algo" {
		assert.equals(#{armario}, academia.mueblesDondePuedoGuardar(pava))
		assert.equals(#{armario, gabineteMagico}, academia.mueblesDondePuedoGuardar(lamparaAladino))
	}
	
	test "1.5) Guardar cosas" {
		academia.guardar(pava)
		assert.that(academia.tieneGuardada(pava))
		academia.guardar(lamparaAladino)
		assert.that(academia.tieneGuardada(lamparaAladino))
		assert.throwsException({academia.guardar(escoba)})
		assert.throwsException({academia.guardar(pelota)})
		assert.throwsException({academia.guardar(varita)})
	}
	
	test "1.5) No poder guardar una cosa porque no hay mueble que lo acepte" {
		armario.cantidadMaxima(1)
		assert.throwsException({academia.guardar(pava)})
		assert.notThat(academia.tieneGuardada(pava))
	}
	
/*
 * 	test "punto 2.1 utilidad" {
 * 		// TODO: Guardar la pava en el armario
 * 		// TODO: Guardar la lámpara en el gabinete mágico
 * 		var baulMagico = null // TODO: construir/obtener un baúl mágico con volumen máximo = 12 y con la escoba y la lámpara dentro
 * 		// TODO: Verificar que la utilidad del armario es 1.1
 * 		// TODO: Verificar que la utilidad del ganibete mágico es 3
 * 		// TODO: Verificar que la utilidad del baúl es 4
 * 		// TODO: Verificar que la utilidad del baúl mágico es 5
 * 	}
 */
/*
 * 	test "punto 2.2 cosas menos utiles" {
 * 		// TODO: Guardar la pava en el armario
 * 		// TODO: Guardar la lámpara en el gabinete mágico
 * 		// TODO: Verificar que las cosas menos útiles en la academia son la pelota, la varita y la escoba
 * 	}
 */
/*
 * 	test "punto 2.3 marca de cosa menos util" {
 * 		// TODO: Guardar la pava en el armario
 * 		// TODO: Guardar la lámpara en el gabinete mágico
 * 		// TODO: Verificar que la marca menos útil de la academia es cuchuflito
 * 	}
 */
/*
 * 	test "punto 2.4 remover cosas menos utiles que no son magicas" {
 * 		// TODO: Guardar la pava en el armario
 * 		// TODO: Guardar la lámpara en el gabinete mágico
 * 		// TODO: Remover las cosas menos útiles de la academia que no son mágicas
 * 		// TODO: Verificar que la varita está guardada en la academia
 * 		// TODO: Verificar que la pelota NO está guardada en la academia
 * 		// TODO: Verificar que la escoba está guardada en la academia
 * 		// TODO: Verificar que la pava está guardada en la academia
 * 		// TODO: Verificar que la lámpara está guardada en la academia
 * 	}
 */
/*
 * 	test "punto 2.4 imposible remover cosas menos utiles que no son magicas" {
 * 		// TODO: Hacer que la academia tenga solamente el armario y el baúl
 * 		// TODO: Remover las cosas menos útiles de la academia que no son mágicas (NO SE PUEDE!)
 * 	}
 */
}

